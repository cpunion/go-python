# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install embedme
        run: npm install -g embedme
        
      - name: Verify README.md embedded code
        run: npx embedme --verify README.md
        
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Check formatting
        run: |
          if [ -n "$(go fmt ./...)" ]; then
            echo "Some files are not properly formatted. Please run 'go fmt ./...'"
            exit 1
          fi

  build:
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-24.04
    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.23

      - name: Build
        run: go install -v ./...

      - name: Test with coverage
        run: go test -v -coverprofile=coverage.txt -covermode=atomic ./...
      
      - name: Test gopy
        run: |
          gopy init $HOME/foo
          cd $HOME/foo
          gopy build -v .
          gopy run -v .
          gopy install -v .

      - name: Upload coverage to Codecov
        if: matrix.os == 'ubuntu-24.04'
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.txt
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
